/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on 31-mei-2011, 21:00:31
 */

package cirkels2;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Piet
 */
public class NewJFrame extends javax.swing.JFrame {

    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
        initEigenVariabelen();
        this.setTitle("Cirkels... met de groeten van Piet!");
        this.pack();
        this.setResizable(false);
        this.setLocation(300,300);
        this.setVisible(true);
        timer.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      panel_toonCirkels = new JPanel() {
         public void paintComponent(Graphics g) {
            Graphics g2 = buf_voor_jpanel.getGraphics();
            if (buf_foto != null) g2.drawImage(buf_foto, 0, 0, null);
            framenummer = (framenummer + 1) % bandbreedte;
            g2.drawImage(plaatjes.getImage(framenummer), 0, 0, null);
            g.drawImage(buf_voor_jpanel, 0, 0, null);
            g2.dispose();
         }
      };
      button_LoadPicture = new javax.swing.JButton();
      button_SavePicture = new javax.swing.JButton();
      button_Color1 = new javax.swing.JButton();
      button_Color2 = new javax.swing.JButton();
      jPanel2 = new javax.swing.JPanel();
      jLabel1 = new javax.swing.JLabel();
      slider_Color1 = new javax.swing.JSlider();
      jLabel2 = new javax.swing.JLabel();
      slider_Color2 = new javax.swing.JSlider();
      jLabel3 = new javax.swing.JLabel();
      comboBand = new javax.swing.JComboBox();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setBackground(new java.awt.Color(212, 212, 212));

      panel_toonCirkels.setBackground(new java.awt.Color(212, 212, 212));
      panel_toonCirkels.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
      panel_toonCirkels.setMaximumSize(new java.awt.Dimension(400, 300));
      panel_toonCirkels.setMinimumSize(new java.awt.Dimension(400, 300));
      panel_toonCirkels.setPreferredSize(new java.awt.Dimension(400, 300));

      javax.swing.GroupLayout panel_toonCirkelsLayout = new javax.swing.GroupLayout(panel_toonCirkels);
      panel_toonCirkels.setLayout(panel_toonCirkelsLayout);
      panel_toonCirkelsLayout.setHorizontalGroup(
         panel_toonCirkelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 394, Short.MAX_VALUE)
      );
      panel_toonCirkelsLayout.setVerticalGroup(
         panel_toonCirkelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 294, Short.MAX_VALUE)
      );

      button_LoadPicture.setText("Load Picture");
      button_LoadPicture.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray));
      button_LoadPicture.setFocusable(false);
      button_LoadPicture.setRequestFocusEnabled(false);
      button_LoadPicture.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            button_LoadPictureActionPerformed(evt);
         }
      });

      button_SavePicture.setText("Save Picture");
      button_SavePicture.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.darkGray));
      button_SavePicture.setFocusable(false);
      button_SavePicture.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            button_SavePictureActionPerformed(evt);
         }
      });

      button_Color1.setText("Set Color 1");
      button_Color1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.darkGray));
      button_Color1.setFocusable(false);
      button_Color1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            button_Color1ActionPerformed(evt);
         }
      });

      button_Color2.setText("Set Color 2");
      button_Color2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.darkGray));
      button_Color2.setFocusable(false);
      button_Color2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            button_Color2ActionPerformed(evt);
         }
      });

      jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Transparency (in %)"));

      jLabel1.setText("Color 1");

      slider_Color1.setMajorTickSpacing(25);
      slider_Color1.setMinorTickSpacing(5);
      slider_Color1.setPaintLabels(true);
      slider_Color1.setPaintTicks(true);
      slider_Color1.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            slider_Color1StateChanged(evt);
         }
      });

      jLabel2.setText("Color 2");

      slider_Color2.setMajorTickSpacing(25);
      slider_Color2.setMinorTickSpacing(5);
      slider_Color2.setPaintLabels(true);
      slider_Color2.setPaintTicks(true);
      slider_Color2.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            slider_Color2StateChanged(evt);
         }
      });

      javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
      jPanel2.setLayout(jPanel2Layout);
      jPanel2Layout.setHorizontalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(slider_Color1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(36, 36, 36)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
            .addComponent(slider_Color2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );
      jPanel2Layout.setVerticalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(slider_Color2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel2)
               .addComponent(slider_Color1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel1))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel3.setText("Set Bandwidth");

      comboBand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));
      comboBand.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            comboBandActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(panel_toonCirkels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(button_SavePicture, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                           .addComponent(button_LoadPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                           .addComponent(button_Color1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                           .addComponent(button_Color2, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                           .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(comboBand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(panel_toonCirkels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(button_LoadPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(button_SavePicture, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(31, 31, 31)
                  .addComponent(button_Color1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(button_Color2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(44, 44, 44)
                  .addComponent(jLabel3)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(comboBand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(20, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    private void button_LoadPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_LoadPictureActionPerformed
         int f = filechooser.showOpenDialog(this);
         if (f != JFileChooser.APPROVE_OPTION){
            return;
         }
         current_file = filechooser.getSelectedFile();
         current_extension = bepaalFileExtensie(current_file);
         try {
            BufferedImage temp=ImageIO.read(current_file);
            zetNieuweFoto(temp);
         }
         catch(IOException ex){
            JOptionPane.showMessageDialog(this, "Het laden van deze foto\nis helaas niet gelukt..","Helaas...", JOptionPane.WARNING_MESSAGE);
         }
}//GEN-LAST:event_button_LoadPictureActionPerformed

    private void button_SavePictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SavePictureActionPerformed
       // TODO add your handling code here:
       boolean wegschrijven_gelukt = false;
       int x = buf_voor_jpanel.getWidth();
       int y = buf_voor_jpanel.getHeight();
       BufferedImage even = new BufferedImage(x, y, BufferedImage.TYPE_INT_ARGB);
       Graphics g = even.getGraphics();
       g.drawImage(buf_voor_jpanel, 0, 0, null);
       g.dispose();
       int f = filechooser.showSaveDialog(this);
       if (f != JFileChooser.APPROVE_OPTION) {
         return;
      }
       File temp = filechooser.getSelectedFile();
       if (temp.exists()) {
          String s = "Het bestand \"" + temp.getName() + "\" bestaat al.\nWilt u het overschrijven?";
          int response = JOptionPane.showConfirmDialog(this,
                                                       s,
                                                       "Bevestig overschrijven",
                                                       JOptionPane.YES_NO_OPTION,
                                                       JOptionPane.WARNING_MESSAGE
                                                      )
          ;
          if (response == JOptionPane.NO_OPTION) {
            return;
          }
       }
       try {
          // controleer extensie
          String s = bepaalFileExtensie(temp);
          if (! toegestane_extensie(s)) {
             geef_filetype.setLocation(300, 300);
             geef_filetype.setVisible(true);
             s = (String) geef_filetype.jComboBox1.getSelectedItem();
             if (s.equals("cancel save")) {
                return;
             }
             // nu moeten we nog de naam goed zien te krijgen
             temp = zetFileType(temp, s);
          }
          wegschrijven_gelukt = ImageIO.write(even, s, temp);
       }
       catch (Exception e) {
          JOptionPane.showMessageDialog(this, "Helaas, fout bij het wegschrijven opgetreden:\n" + e);
       }
       if (!wegschrijven_gelukt) {
          JOptionPane.showMessageDialog(this, "Helaas, fout bij het wegschrijven opgetreden!");
       }
       else {
          current_file = temp;
       }
}//GEN-LAST:event_button_SavePictureActionPerformed

    private void button_Color1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_Color1ActionPerformed
       // TODO add your handling code here:
       Color col = JColorChooser.showDialog(this,"Kiest U maar..", kleur1_opaque);
       if (col == null) return;
       verwerk_nieuwe_kleur(1, col);
}//GEN-LAST:event_button_Color1ActionPerformed

    private void button_Color2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_Color2ActionPerformed
       // TODO add your handling code here:
       Color col = JColorChooser.showDialog(this,"Kiest U maar..", kleur2_opaque);
       if (col == null) return;
       verwerk_nieuwe_kleur(2, col);
}//GEN-LAST:event_button_Color2ActionPerformed

    private void slider_Color1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_Color1StateChanged
       // TODO add your handling code here:
//       if (slider_Color1.getValueIsAdjusting()) return;
       int t = slider_Color1.getValue();
       veranderTrans(1, t);
    }//GEN-LAST:event_slider_Color1StateChanged

    private void slider_Color2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_Color2StateChanged
       // TODO add your handling code here:
//       if (slider_Color2.getValueIsAdjusting()) return;
       int t = slider_Color2.getValue();
       veranderTrans(2, t);

    }//GEN-LAST:event_slider_Color2StateChanged

    private void comboBandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBandActionPerformed
       // TODO add your handling code here:
       String s = (String) comboBand.getSelectedItem();
       band = Integer.parseInt(s);
       plaatjes.setMainbandWidth(band);
    }//GEN-LAST:event_comboBandActionPerformed

    /**
    * @param args the command line arguments
    */

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton button_Color1;
   private javax.swing.JButton button_Color2;
   private javax.swing.JButton button_LoadPicture;
   private javax.swing.JButton button_SavePicture;
   private javax.swing.JComboBox comboBand;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel panel_toonCirkels;
   private javax.swing.JSlider slider_Color1;
   private javax.swing.JSlider slider_Color2;
   // End of variables declaration//GEN-END:variables
   // eigen variabelen
   int t_kleur1;   // de trans-waarde van kleur1, in procenten!
   int t_kleur2;   // de trans-waarden van kleur2, in procenten!
   Color kleur1, kleur2, kleur1_opaque, kleur2_opaque;
   Timer timer;
   int bandbreedte, band;
   Cirkels_Base plaatjes;
   BufferedImage buf_voor_jpanel, buf_foto;
   ActionListener al, al_load, al_save;
   int framenummer;
   JFileChooser filechooser;
   FileNameExtensionFilter fnef;
   File current_file;
   String current_extension;
   NewJDialog geef_filetype;
   String[] toegestane_extensies;


   private void initEigenVariabelen() {
      bandbreedte = 16;
      band = 8;
      zetKleur(1, 0, 0, 128, 100);
      zetKleur(2, 0, 0, 0, 75);
      buf_voor_jpanel = new BufferedImage(400, 300, BufferedImage.TYPE_INT_ARGB);
      buf_foto = new BufferedImage(400, 300, BufferedImage.TYPE_INT_ARGB);
      al = new ActionListener() {
         @Override
         public void actionPerformed(ActionEvent e) {
            panel_toonCirkels.repaint();
         }
      };
      timer = new Timer(40, al);
      //
      button_Color1.setBackground(kleur1_opaque);
      button_Color1.setForeground(inverteerKleur(kleur1_opaque, false));
      button_Color2.setBackground(kleur2_opaque);
      button_Color2.setForeground(inverteerKleur(kleur2_opaque, false));
      plaatjes = new Cirkels_Base(bandbreedte, band, 400, 300, kleur1, kleur2);

      initieer_buf_foto();

      toegestane_extensies = ImageIO.getWriterFileSuffixes();
      StringBuffer even = new StringBuffer(30);
      even.append(toegestane_extensies[0]);
      for (int i = 1; i < toegestane_extensies.length; i++) {
         even.append(", " + toegestane_extensies[i]);
      }

      fnef = new FileNameExtensionFilter(new String(even), toegestane_extensies);
      filechooser = new JFileChooser();
      filechooser.setFileFilter(fnef);
      filechooser.setMultiSelectionEnabled(false);
      current_file = null;
      current_extension = null;

      slider_Color1.setValue(t_kleur1);
      slider_Color2.setValue(t_kleur2);
      comboBand.setSelectedIndex(band - 1);

      geef_filetype = new NewJDialog();
      
      for (int i = 0; i < toegestane_extensies.length; i++) {
         System.out.format("extensie %d: %s \n", i, toegestane_extensies[i]);
      }
   }

   private void zetKleur(int nr, int rood, int groen, int blauw, int trans) {
      Color col = new Color(rood, groen, blauw, alpha(trans));
      Color col2 = new Color(rood, groen, blauw);
      if (nr == 1) {
         t_kleur1 = trans;
         kleur1 = col;
         kleur1_opaque = col2;
      }
      else {
         t_kleur2 = trans;
         kleur2 = col;
         kleur2_opaque = col2;
      }
   }   // einde zetKleur

   private void veranderTrans(int nr, int new_trans) {
      if (nr == 1) {
         t_kleur1 = new_trans;
         int r = kleur1.getRed();
         int g = kleur1.getGreen();
         int b = kleur1.getBlue();
         int a = alpha(t_kleur1);
         kleur1 = new Color(r, g, b, a);
         plaatjes.setColor1(kleur1);
      }
      else {
         t_kleur2 = new_trans;
         int r = kleur2.getRed();
         int g = kleur2.getGreen();
         int b = kleur2.getBlue();
         int a = alpha(t_kleur2);
         kleur2 = new Color(r, g, b, a);
         plaatjes.setColor2(kleur2);
      }
   }

   private Color inverteerKleur(Color col, boolean metTrans) {
      Color c;
      int r = 255 - col.getRed();
      int g = 255 - col.getGreen();
      int b = 255 - col.getBlue();
      if (metTrans) {
         int t = 255 - col.getAlpha();
         c = new Color(r, g, b, t);
      }
      else c = new Color(r, g, b);
      return c;
   }

   private Color maakKleurZonderTransparancy(Color col) {
      Color c;
      int r = col.getRed();
      int g = col.getGreen();
      int b = col.getBlue();
      return new Color(r, g, b);
   }

   private void initieer_buf_foto() {
      try{
         URL url= NewJFrame.class.getResource("Resources/plaatje_voor_cirkels2.jpg");
//         if (url != null) {
////            String s = url.getFile();
////            System.out.println(s);
//            BufferedImage temp = ImageIO.read(url);
//            zetNieuweFoto(temp);
//            current_extension = "jpg";
//         }
      }
      catch(Exception ex){
//         ex.printStackTrace();
//         System.out.println("Foto niet gevonden!!!");
      }
   }   // einde initieer_buf_foto

   private void zetNieuweFoto(BufferedImage temp){
      Graphics g = buf_foto.getGraphics();
      int x = buf_foto.getWidth();
      int y = buf_foto.getHeight();
      if (temp != null) {
         g.drawImage(temp, 0, 0, x, y, null);
         g.dispose();
      }
      else {
         g.setColor(Color.WHITE);
         g.fillRect(0, 0, x, y);
      }
   }

   private String bepaalFileExtensie(File f) {
      String s = f.getAbsolutePath();
      int i = s.lastIndexOf(".");
      if (i == 0) {
         return null;
      }
      else return s.substring(i + 1);
   }

   private boolean toegestane_extensie(String s) {
      String t = s.toLowerCase();
      for (int i = 0; i < toegestane_extensies.length; i++ ) {
         if (t.equals(toegestane_extensies[i])) {
            return true;
         }
      }
      return false;
   }

   private File zetFileType(File f, String s) {
      String p = f.getAbsolutePath();
      int i = p.lastIndexOf(".");
      if (i == -1) {
         p = p + "." + s;
      }
      else {
         p = p.substring(0, i) + s;
      }
      System.out.println(p);
      return new File(p);
   }

   private void verwerk_nieuwe_kleur(int nr, Color col) {
      int r = col.getRed();
      int g = col.getGreen();
      int b = col.getBlue();
      if (nr == 1) {
         zetKleur(1, r, g, b, t_kleur1);
         button_Color1.setBackground(kleur1_opaque);
         button_Color1.setForeground(inverteerKleur(kleur1_opaque, false));
      }
      else {
         zetKleur(2, r, g, b, t_kleur2);
         button_Color2.setBackground(kleur2_opaque);
         button_Color2.setForeground(inverteerKleur(kleur2_opaque, false));
      }
      plaatjes.setColors(kleur1, kleur2);
   }
   
   private int percentage(int trans) {
      return 100 * trans / 255;
   }

   private int alpha(int trans_percentage) {
      int h = 255 - 255 * trans_percentage / 100;
      return h;
   }

}
